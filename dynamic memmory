#include <stdio.h> 
#include <stdlib.h> 

//1
int main(){

	int n, i, *ptr, sum = 0;

	printf("Enter number of elements: ");
	scanf("%d", &n);

	ptr = (int*)malloc(n*sizeof(int));

	if (ptr == NULL) {
		printf("Error! memory not allocated.");
		exit(0);
	}

	for (i = 0; i < n; ++i) {
		printf("Enter elements of array: ");
		scanf("%d", ptr + i); 
		sum += *(ptr + i);
	}

	printf("Sum=%d", sum);
	free(ptr);

	return 0;
}

//2
int main(){

	int n, i, *ptr, sum = 0;

	printf("Enter number of elements: ");
	scanf("%d", &n);

	ptr = (int*)calloc(n,sizeof(int));

	if (ptr == NULL) {
		printf("Error! memory not allocated.");
		exit(0);
	}

	for (i = 0; i < n; ++i) {
		printf("Enter elements of array: ");
		scanf("%d", ptr + i);
		sum += *(ptr + i);
	}

	printf("Sum=%d \n", sum);
	free(ptr);

	return 0;
}

//3
int main(){
	int *ptr, i, n1, n2;

	printf("Enter size of array: ");
	scanf("%d", &n1);

	ptr = (int*)malloc(n1*sizeof(int));
	printf("Address of previously allocated memory: ");

	for (i = 0; i < n1; ++i) 
		printf("%u\t", ptr + i);

	printf("\nEnter new size of array: ");
	scanf("%d", &n2); 
	ptr = realloc(ptr, n2);

	for (i = 0; i < n2; ++i)
		printf("%u\t", ptr + i);

	return 0;
}

//4
int main()
{
	int i, n;
	int * stations;
	i = 7;
	stations = (int*)malloc(i * 4);

	if (stations == NULL) exit(1);

	for (n = 0; n<i; n++)
		stations[n] = n;
	for (n = 0; n<7; n++)
		printf("%d ", stations[n]);
	printf("\n");

	int *ptrToStations;
	ptrToStations = stations;
	stations = (int*)malloc(++i * 4);

	for (n = 0; n<7; n++)
		stations[n] = ptrToStations[n];

	stations[i - 1] = i;

	for (n = 0; n<7; n++)
		printf("%d ", stations[n]);
	printf("\n");

	ptrToStations = stations;
	int x = 3;
	for (n = x; n<i; n++)
		ptrToStations[n - 1] = ptrToStations[n];

	stations = (int*)malloc(--i * 4);

	for (n = 0; n<7; n++)
		stations[n] = ptrToStations[n];

	for (n = 0; n<7; n++)
		printf("%d ", stations[n]);
	printf("\n");

	free(stations);
	free(ptrToStations);

	return 0;
}

//5
int main(){
	int i, n;
	int * stations;
		i = 7; 
		stations = (int*)calloc(i, sizeof(int));

	if (stations == NULL) exit(1);
	for (n = 0; n<i; n++)
		stations[n] = n;

	for (n = 0; n<7; n++)
		printf("%d ", stations[n]);
	printf("\n");

	int *ptrToStations;
	ptrToStations = stations; 
	stations = (int*)calloc(++i, sizeof(int)); 
	for (n = 0; n<7; n++)
		stations[n] = ptrToStations[n];
	stations[i - 1] = i;

	for (n = 0; n<7; n++)
		printf("%d ", stations[n]);
	printf("\n");

	ptrToStations = stations;

	int x = 3;
	for (n = x; n<i; n++)
		ptrToStations[n - 1] = ptrToStations[n]; 
	stations = (int*)calloc(--i, sizeof(int)); 
	for (n = 0; n<7; n++)
		stations[n] = ptrToStations[n];

	for (n = 0; n<7; n++)
		printf("%d ", stations[n]);
	printf("\n");

	free(stations);
	free(ptrToStations);

	return 0;
}

//6
int main(){
	int count = 0, i;
	int *stations = NULL, *ptrToStations = NULL;

	for (i = 1; i <= 7; i++, count++){
		ptrToStations = (int*)realloc(stations, count*sizeof(int));

		if (ptrToStations != NULL){
			stations = ptrToStations;
			stations[count] = i;
		}
	}
	for (i = 0; i < 7; i++)
		printf("%d ", stations[i]);
	printf("\n");

	ptrToStations = (int*)realloc(stations, ++count*sizeof(int));

	if (ptrToStations != NULL){
		stations = ptrToStations;
		stations[count - 1] = count;
	}

	for (i = 0; i < count; i++)
		printf("%d ", stations[i]);
	printf("\n");

	int x = 3;

	for (i = x; i < count; i++)
		ptrToStations[i - 1] = ptrToStations[i];

	ptrToStations = (int*)realloc(stations, --count*sizeof(int));

	if (ptrToStations != NULL)
		stations = ptrToStations;

	for (i = 0; i < count; i++)
		printf("%d ", stations[i]);
	printf("\n");

	free(stations);
	free(ptrToStations);

	return 0;
}

//7
int main(){
	int i, n;
	int *count;

	printf("Enter number of elements:");
	scanf("%d", &n);

	count = (int*)calloc(n, sizeof(int));

	for (i = 0; i < n; i++){
		count[i] = i + 1;
	}

	for (i = 0; i < n; i++){
		printf("%d", count[i]);
	}


	free(count);
	return 0;
}

//8
int main(){
	int i, n, p = 1, counter = 0, s;
	char letter, string[50] = { NULL };
	int *count=NULL, *pointd = NULL;
	char *ch=NULL, *pointc = NULL;

	printf("Enter string:");
	gets(string);
	s = (strlen(string));
	for (i = 0; i <= s; i++, p++){
		pointc = (char*)realloc(ch, p*sizeof(char));
		pointd = (int*)realloc(count, p*sizeof(int));
		if (pointd != NULL & pointc != NULL){
			count = pointd;
			ch = pointc;
		}
		counter = 0;
		letter = string[i];
		if (strchr(ch, letter) == NULL){
			for (n = 0; n <= s; n++){
				if (letter == string[n])
					counter++;
			}
			ch[i] = letter;
			count[i] = counter;
			
			printf("\n letter %c appears %d times", ch[i], count[i]);
	}
	
	}

	free(pointc);
	free(pointd);
	free(ch);
	free(count);
	return 0;
}
